Computer
- Computer is an electronic device that processes input data
- Computer is a collection of hardware and software
- It is programmable device. Because of this feature same machine can be used in different places using different programs
- Input device converts the input data into the form understandable by the computer
- CPU = ALU + CU
- ALU performs all arithmetic and logical operations
- CU - send and receives signals
- Program - Set of instructions written in machine related language
- ROM is needed to start the computer - this is called booting
- secondary memory is large in size and permanent
- Computer can process data present in primary memory only
- Data can be character, numeric, sound, graphics - character and numeric data is important for programmers (beginners)

Data in memory
- Every piece of information is stored in memory in form of 0 and 1. This is called bit
- Each bit is an electronic device - capable of being ON or OFF. We interpret/represent ON as 1, OFF as 0
- 8 bits combined together are called byte
- 1 Byte needed to store one character

Primary memory
- Made of semiconductors
- volatile
- two types - ROM and RAM
- ROM is used to store BIOS - needed to start the computer - booting process
- CPU works on data stored in memory 
- program runs in memory

Secondary memory
- permanent - data is stored using magnetisation
- data is stored using sectors, cylinders, disk
- removable secondary storage - pen drive, CD

Speed and reliability
- Computers process data with high speed - nanoseconds
- they never make mistakes of their own
- errors are due to programming errors or data entry errors

Software vs hardware
- CPU, RAM, Monitor, Keyboard, mouse, HD are hardware
- Computer cannot do anything using just the hardware
- To make the computer useful, software is needed
- System software - Defines the computer (provides functionality to the computer) irrespective of the area or appication where the computer is used
eg: operating system, compilers, editors
- Application software - Provides specific functionality
eg: railway ticket booking application
online examination form filling application

OS
- It is a system software - gives life to the machine
- Acts as an interface between the computer HW and user
- Any HW device attched to the computer must have OS support
- It provides an environment for execution of the programs
- It does resource management
- Every OS provides capability to store and manage user data in form of files and folders
- Files and folders are present in for of hierarchical tree structure
- Each file/folder has absolute path name or relative path name - absolute path name is unique in a file system
- Each file system/drive - given a letter (represnted using a letter)
- Different OS - DOS, Windows, Unix
- DOS - Disk Operating System - provides command based interface - user intercats with the OS using commands
- Windows - single user OS - highly secure - provides graphical user interface
- Unix - highly secure, both graphical and command based interface - multiuser system

Compiler
- Machine understands the language of 0 and 1
- For humans it is difficult to write programs in form of 0 and 1 - using numbers - numbers are not very intuitive
- Humans use English like language to write a program - high level programming language
- Computer does not understand this high level programming language - hence it cannot directly run a program written in high level language
- A translator is needed to convert the program written in high level programming language to machine language
- This translator is called compilers
- Each language needs a compiler - just like each foreign language - German, French, would need a seperate translator
Pascal compiler, C compiler, C++ compiler, etc
- Program in high level programming language - source code
program in machine language - object code
- Compiler converts the entire program into machine code - this is then executed
- Compiler is not needed while executing the program
- Interpreter compiles and runs one line (statement) of program at a time
- Interpreter is needed while executing the program - execution time is more when interpreter is used

Process of writing a program
- Analyse the problem, input, output and steps need to process the input and get the required output
- Represent the steps using - algorithm, pseudo code, flowchart
- Detailed representation of each step
- Convert each step using programming language
- Compile the program
- Run the program

Algorithm
- Writing steps in English like language

Pseudo code
- Using more formal language to write the steps of the program
- Use Start, Stop, etc

Flowchart
- Use graphical symbols

SW development life cycle
- Requirement analysis - understand the problem, requirements - what to do
- SW Design - find the solution - how to do
- SW Coding - implement the solution using programming language - do
- SW Testing - provide IP and see expected OP is received - check SW, fix the defects
- Installation, Maintenance

Approch of programming
- Top down approach - develop the topmost module first, going down toward the sub modules
- Bottom up approach - develop the bottom most modules first, going upwards

Modular approach
- Break down the problem - into sub modules
- Further break down the sub modules - till you reach a submodule which can be implemented without need to divide it further
- Calling module
- Called module
- Advantage - reuse of the code, easier to understand, easier to read the program, fault can be localised

Structure the control flow
- Sequence
- Selection
- Repetition

Types of programming languages
- Machine level - low level language
very detailed
- High level - details are eliminated (translator takes care of many details)
- One statement in high level programming language can represent many statements in machine language

Introduction to C
- C was developed by Dennis Ritchie in At & T Bell Lab
- C is basd on its predecessors - B and BCPL
- BCPL - Martin Richards
- B - Ken Thompson
- B and BCPL were typeless - each data element was one word size
- C added data types
- It is a high level programming language, case sensitive, block structured, procedural
- Initially use of C was confined to AT & T Bell Lab
- Dennis Ritchie and Brian Kernighan came up with K&R standard in which they described the C
- Computer professionals started using C to develop various softwares
- ANSI standard came up in 1989
- ISO standard in 1990
- C99 standard came up in 1999
- Today almost all C compilers and interpreters comply to ANSI standard
- C is portable - C program can work on different machines - each compiler comes up with standard library functions specific to machine
- C provides certain features (low level features like pointers) which makes it capable of being used for writing system softwares
- C++ was developed by Bjarne Stroustrup - extended C - new features were added - based on object oriented paradigm

Structure of C program
- Comments are for user - to increase the readability
- statement beginning with # is a directive for compiler (preprocessor)
- main - entry point function
- function - header + body
- function header - function name, input arguments, return value
- function body - set of statements enclosed in { }
- header file - contains information required to use library functions in the program
- whitespaces - program has white spaces which is combination of spaces, indentation (tabs), newline
